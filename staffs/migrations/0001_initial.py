# Generated by Django 3.1 on 2020-11-26 00:11

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StaffType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_type', models.CharField(help_text='e.g., Invar, Fibre glass', max_length=25, unique=True)),
                ('thermal_coefficient', models.FloatField(help_text='Staff coefficient in ppm')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_number', models.CharField(help_text='Staff serial number', max_length=15, unique=True)),
                ('staff_length', models.FloatField(help_text='Staff length in meters', validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(7.0)])),
                ('standard_temperature', models.FloatField(help_text='Standard temperature', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(45.0)])),
                ('correction_factor', models.FloatField(help_text='Staff correction factor')),
                ('calibration_date', models.DateField()),
                ('staff_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='staffs.stafftype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['staff_number', '-calibration_date'],
            },
        ),
        migrations.CreateModel(
            name='DigitalLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_number', models.CharField(help_text='Enter the instrument serial number', max_length=15, unique=True)),
                ('level_make', models.CharField(help_text='e.g., Leica', max_length=15)),
                ('level_model', models.CharField(help_text='e.g., LS15 or DNA03', max_length=15)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['level_number', 'level_make'],
            },
        ),
    ]
